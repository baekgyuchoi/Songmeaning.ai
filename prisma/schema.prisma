// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}


   
model Songs {
  id              Int      @id @default(autoincrement())
  isValid         Boolean  @default(true)
  viewCount       Int      @default(0)
  song_title      String
  song_slug       String   @unique
  artist_name     String
  artist_slug     String   
  artist Artist @relation(fields: [artist_slug], references: [artist_slug])
  genius_url      String   @unique
  genius_id       Int      @unique
  lyrics          String?  @db.Text
  song_meaning SongMeaning?
  song_image_url  String  @default("https://images.genius.com/6b5b1a34b7b09417468f3848046f1b71.300x300x1.png")
  header_image_url String @default("https://images.genius.com/b8eb5ee526b9948ecf5b68572464f35b.1000x1000x1.png")
  song_short_title String @default("Song Short Title here")
  release_date    String  @default("Release Date here")
  two_word_description     String  @default("default/default")
  badges            BadgesOnSongs[] 

  @@index([artist_slug])
}

model Badges {
  id          Int          @id @default(autoincrement())
  badge_name  String       @unique
  songs       BadgesOnSongs[]
  created_at  DateTime     @default(now())
  first_song  String
  
}

model BadgesOnSongs {
  badge_id  Int
  song_id   Int
  song        Songs         @relation(fields: [song_id], references: [id])
  badges      Badges        @relation(fields: [badge_id], references: [id])


  @@id([badge_id, song_id])
  @@index([badge_id])
  @@index([song_id])
}


model Artist {
  id          Int          @id @default(autoincrement()) 
  artist_slug String       @unique
  name        String
  songs       Songs[]
}

model SongMeaning {
  id     Int @id @default(autoincrement())
  slug String  @unique
  song   Songs @relation(fields: [slug], references: [song_slug])
  meaning String @db.Text
  createdAt DateTime @default(now())
}